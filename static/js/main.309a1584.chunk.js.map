{"version":3,"sources":["assets/404d.png","context.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/layout/Header.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","bind","Link","to","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onInputChange","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","href","titulo","propsTypes","PropTypes","string","isRequired","About","NotFound","src","notFound","alt","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.309a1584.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404d.b23854e9.png\";","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n//reducer wich evaluates de action type (add, update, delete)\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ?\r\n                     (contact = action.payload) :\r\n                      contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        \r\n        //request\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n        \r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider> \r\n        )\r\n    };\r\n};\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    //toggle contact info\r\n    onShowClick = e => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        }) \r\n    };\r\n\r\n    //delete contact\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try{\r\n            //request\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n        } catch(ex) {\r\n            dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n        }\r\n        \r\n    }\r\n \r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return <div className=\"card card-body mb-3\">\r\n                        <h4 className=\"contactName\">\r\n                          <i className=\"fas fa-user\" /> {name}&nbsp;\r\n                          <i onClick={this.onShowClick} className=\"fas fa-sort-down\" />\r\n                          <i className=\"fas fa-times\" onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                            <Link to={`contacts/edit/${id}`}><i className=\"far fa-edit\"></i></Link>\r\n                        </h4>\r\n                        {showContactInfo ? <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                              <i className=\"fas fa-envelope\" />{email}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              <i className=\"fas fa-phone\" />{phone}\r\n                            </li>\r\n                          </ul> : null}\r\n                      </div>;\r\n                }}\r\n            </Consumer>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2 text-white\">Contact List</h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type} \r\n                value={value} \r\n                onChange={onChange} \r\n                name={name} \r\n                placeholder={placeholder}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })} \r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}        \r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n    onchange: PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {name: 'Name is required'}\r\n            });\r\n            return;\r\n        } \r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {email: 'Email is required'}\r\n            });\r\n            return;\r\n        } \r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {phone: 'Phone is required'}\r\n            });\r\n            return;\r\n        } \r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        //request\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n        \r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirecting to home after submiting\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2 text-white\">Add Contact</h1>\r\n                            <div className=\"card mb-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            value={name}\r\n                                            placeholder=\"Enter Name...\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            placeholder=\"Enter Email...\"\r\n                                            type=\"email\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            value={phone}\r\n                                            placeholder=\"Enter Phone...\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-success\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                        \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`) \r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    };\r\n    \r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const {id} =this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //redirecting to home after submiting\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2 text-white\">Edit Contact</h1>\r\n                            <div className=\"card mb-5\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            value={name}\r\n                                            placeholder=\"Enter Name...\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            placeholder=\"Enter Email...\"\r\n                                            type=\"email\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            value={phone}\r\n                                            placeholder=\"Enter Phone...\"\r\n                                            onChange={this.onInputChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-block btn-success\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n                <a href=\"/\" className=\"navbar-brand\">{props.titulo}</a>\r\n                <div className=\"container\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add Contact\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>    \r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    titulo: 'React Contact Manager'\r\n}\r\n\r\nHeader.propsTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 text-white\">About Contact Manager</h1>\r\n            <p className=\"lead text-white\">React App to manage contacts using Context API, react-router, classnames and jsonplaceholder</p>\r\n            <p className=\"text-light\">Version 1.0.0 by Pablo Beccalli</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport notFound from '../../assets/404d.png';\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-2 display-1 text-center text-white\">Oops...</h1>\r\n            <h1 className=\"mt-1 display-5 text-center text-light\">This page could not be found...</h1>\r\n            <img className=\"notFound\" src={notFound} alt=\"404\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header\n              titulo=\"Contact Manager\"\n            />\n            <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/contacts/add\" component={AddContact}/>\n                  <Route exact path=\"/contacts/edit/:id\" component={EditContact}/>\n                  <Route exact path=\"/\" component={Contacts}/>\n                  <Route exact path=\"/about\" component={About}/>\n                  <Route component={NotFound}/>\n                </Switch>\n            </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}